If this is a git repository checkout (as opposed to sources extracted
from a source tarball):

  $ autoreconf -vis .

Regardless of whether this is a git repo checkout or an extracted
source tarball:

  $ ./configure --prefix=@prefix@
  $ make
  $ make check # optional
  $ make install

If the given prefix does not match your default git installation's
prefix, git will not find the new commands. To make git find them,
set the environment variable GIT_EXEC_PATH accordingly:

  $ git --exec-path
  /usr/libexec/git-core
  $ export "GIT_EXEC_PATH=@pkglibexecdir@:$(git --exec-path)"
  $ git --exec-path
  @pkglibexecdir@:/usr/libexec/git-core
  $ git amb --version
  git-amb (ndims git utilities) 1.22.1-64ea8c7

A similar operation is required to set up the man pages so that both
"man git-amb" and "git amb --help" can display the git-amb(1) man
page:

  $ manpath
  /usr/local/share/man:/usr/share/man
  $ export MANPATH="@mandir@:$(manpath)"
  $ manpath
  manpath: warning: $MANPATH set, ignoring /etc/man_db.conf
  @mandir@:/usr/local/share/man:/usr/share/man
  $ git amb --help # should come up with the git-amb(1) man page
